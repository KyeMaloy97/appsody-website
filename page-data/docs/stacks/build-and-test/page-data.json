{"componentChunkName":"component---src-templates-doc-template-js","path":"/docs/stacks/build-and-test/","webpackCompilationHash":"1bed7ccc94e2610985a2","result":{"data":{"markdownRemark":{"html":"<h1 id=\"building-and-testing-stacks\"><a href=\"#building-and-testing-stacks\" aria-label=\"building and testing stacks permalink\" class=\"header-link-icon\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building and Testing Stacks</h1>\n<p>The instructions below will reference the \"base directory\", which will be the directory containing the clone or copy of the appsody/stacks git repository.</p>\n<p>Once you have created or updated a stack, use scripts in the <code>ci/</code> directory to build stack images and templates, and to generate an appsody repository index you can use for local testing. The script <code>./ci/build.sh</code> combines several operations (lint, prefetch, package, test) for the specified stack. If you would like to learn more about the process for building, testing and releasing a stack, please see <a href=\"https://github.com/appsody/stacks/blob/master/RELEASE.md#appsody-stacks-release-process---technical-overview\">Appsody Stacks Release Process</a>.</p>\n<h2 id=\"building-a-stack-locally-using-build-scripts\"><a href=\"#building-a-stack-locally-using-build-scripts\" aria-label=\"building a stack locally using build scripts permalink\" class=\"header-link-icon\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building a stack locally using build scripts</h2>\n<p>From the base directory:</p>\n<ol>\n<li>\n<p>Run the build script and specify the desired stack as a parameter, for example:</p>\n<pre><code>./ci/build.sh . incubator/nodejs-express\n</code></pre>\n<p><strong>Note:</strong> If a stack is not specified, all stacks in all repositories will be built.</p>\n</li>\n<li>\n<p>Add the generated appsody repository to the repository list:</p>\n<pre><code>appsody repo add &#x3C;local-repo-name> file://$PWD/ci/assets/&#x3C;local-stack-repo>\n</code></pre>\n<p>The value of <code>&#x3C;local-stack-repo></code> can be <code>incubator-index-local.yaml</code> or <code>experimental-index-local.yaml</code> or <code>stable-index-local.yaml</code>. For example:</p>\n<pre><code>appsody repo add my-repo-incubator file://$PWD/ci/assets/incubator-index-local.yaml\n</code></pre>\n</li>\n<li>\n<p>Check the built stack has been added in that repository by running <code>appsody list my-repo-incubator</code>. Here is an example of the output you should get:</p>\n<pre><code>REPO                ID              VERSION     TEMPLATES           DESCRIPTION\nmy-repo-incubator   nodejs-express  0.2.5       *simple, scaffold   Express web framework for Node.js\n</code></pre>\n</li>\n<li>\n<p>Set an environment variable to use locally created images:</p>\n<pre><code>export APPSODY_PULL_POLICY=IFNOTPRESENT\n</code></pre>\n</li>\n</ol>\n<p>You can now use the generated local repository to create new projects:</p>\n<pre><code>appsody init my-repo-incubator/nodejs-express\n</code></pre>\n<p>Local appsody operations will also be performed against already pulled or rebuilt stack images.</p>\n<h2 id=\"building-a-stack-image-locally-without-build-scripts\"><a href=\"#building-a-stack-image-locally-without-build-scripts\" aria-label=\"building a stack image locally without build scripts permalink\" class=\"header-link-icon\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building a stack image locally without build scripts</h2>\n<p>To build your stack image locally follow the below steps:</p>\n<ol>\n<li>\n<p>Navigate to the <code>&#x3C;repository>/&#x3C;stack-id>/image</code> directory</p>\n</li>\n<li>\n<p>Build stack image:</p>\n<pre><code>docker build -t &#x3C;org-name>/&#x3C;stack-id>:&#x3C;tag> -f Dockerfile-stack .\n</code></pre>\n<p>You now have access to the stack image to use and test locally.</p>\n<p><strong>Note:</strong> The local image should be tagged with the desired release. The tag value is usually the major and minor version of the stack, e.g. <code>appsody/nodejs-express:0.2</code>. If you do not specify the tag value, it will tag it as the latest version, e.g. <code>appsody/nodejs-express:latest</code>.</p>\n</li>\n<li>\n<p>Set an environment variable to use locally created image:</p>\n<pre><code>export APPSODY_PULL_POLICY=IFNOTPRESENT\n</code></pre>\n</li>\n</ol>\n<p>Local appsody operations will also be performed against already pulled or rebuilt stack images.</p>\n<h2 id=\"associating-a-template-with-a-specific-stack-image\"><a href=\"#associating-a-template-with-a-specific-stack-image\" aria-label=\"associating a template with a specific stack image permalink\" class=\"header-link-icon\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Associating a template with a specific stack image</h2>\n<p>To initialize a new project:</p>\n<ol>\n<li>\n<p>Repackage the templates for the stack, from the base directory:</p>\n<pre><code>./ci/build.sh . &#x3C;repository>/&#x3C;stack-id>\n</code></pre>\n<p>For example, <code>./ci/build.sh . incubator/nodejs-express</code></p>\n</li>\n<li>\n<p>Initialize a project with the new stack image, and run appsody commands as usual:</p>\n<pre><code>mkdir -p /tmp/nodejs-express\ncd /tmp/nodejs-express\nappsody init my-repo-incubator/nodejs-express &#x3C;optional template>\nappsody test\n</code></pre>\n</li>\n</ol>\n<p>For a project that has already been initialized:</p>\n<ol>\n<li>\n<p>Update the contents of <code>.appsody-config.yaml</code></p>\n<pre><code>stack: &#x3C;org-name>/&#x3C;stack-id>:&#x3C;tag>\n</code></pre>\n</li>\n<li>\n<p>Use <code>appsody</code> commands as usual:</p>\n<pre><code>appsody run\nappsody test\nappsody build\n</code></pre>\n</li>\n</ol>"}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}